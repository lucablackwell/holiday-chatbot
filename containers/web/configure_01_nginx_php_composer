#!/bin/bash -x

#Pull in functions 
source /root/bash-functions.sh

export DEBIAN_FRONTEND=noninteractive

#We trash the cache data in configure_99_cleanup
evalcommand "apt update" 1

#Install 
evalcommand "apt install -y nginx php-fpm php-cli php-mysql php-bcmath php-json php-mbstring php-services-json php-tokenizer php-xml" 1

PHPVER=$( apt list | egrep "^php[0-9]\.[0-9]\/" | sed -r 's/php([0-9]{1}\.[0-9]{1}).*/\1/g' )
echo "${PHPVER}" > /root/php-version

#Enable short tags
sed -r -i 's/(short_open_tag\s?=\s?Off)/#Was \1\nshort_open_tag = on/i' /etc/php/*/*/php.ini

#Install dependencies
evalcommand "apt install -y git curl unzip apache2-utils" 1
#apache utils required for htpasswd

#Set path for future use
echo 'export PATH="$PATH:$HOME/.config/composer/vendor/bin"' | tee -a /root/.bashrc

#evalcommand "apt purge -y curl" 1
exit 0




server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;

        root /var/www/html;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }

        # pass PHP scripts to FastCGI server
        #
        location ~ \.php$ {
               include snippets/fastcgi-php.conf;
        
               # With php-fpm (or other unix sockets):
               fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
               # With php-cgi (or other tcp sockets):
               #fastcgi_pass 127.0.0.1:9000;
        }

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
}

